generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workflow {
  id            String   @id @default(uuid())
  name          String   @db.VarChar(255)
  description   String?
  enabled       Boolean  @default(true)
  triggerConfig Json     @map("trigger_config") @db.JsonB
  conditions    Json?    @db.JsonB
  actions       Json     @db.JsonB
  metadata      Json?    @db.JsonB
  createdBy     String   @map("created_by") @db.VarChar(255)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  
  // Relations
  executions    Execution[]
  auditLogs     AuditLog[]
  
  @@map("workflows")
}

model Execution {
  id             String    @id @default(uuid())
  workflowId     String    @map("workflow_id")
  status         String    @db.VarChar(50)
  triggerEvent   Json      @map("trigger_event") @db.JsonB
  executionSteps Json?     @map("execution_steps") @db.JsonB
  startedAt      DateTime  @default(now()) @map("started_at")
  completedAt    DateTime? @map("completed_at")
  error          String?
  
  // Relations
  workflow       Workflow  @relation(fields: [workflowId], references: [id])
  auditLogs      AuditLog[]
  
  @@map("executions")
}

model AuditLog {
  id         String   @id @default(uuid())
  entityType String   @map("entity_type") @db.VarChar(50)
  entityId   String   @map("entity_id")
  action     String   @db.VarChar(50)
  userId     String?  @map("user_id") @db.VarChar(255)
  changes    Json?    @db.JsonB
  createdAt  DateTime @default(now()) @map("created_at")
  
  // Relations (optional foreign keys)
  workflow   Workflow? @relation(fields: [workflowId], references: [id])
  execution  Execution? @relation(fields: [executionId], references: [id])
  workflowId String?   @map("workflow_id")
  executionId String?  @map("execution_id")
  
  @@map("audit_logs")
}