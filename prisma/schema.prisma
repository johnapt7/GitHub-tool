generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workflow {
  id          String   @id @default(cuid())
  name        String
  description String?
  definition  Json     // Flexible JSON field for workflow configuration
  status      WorkflowStatus @default(DRAFT)
  version     Int      @default(1)
  isActive    Boolean  @default(false)
  
  createdAt   DateTime @create @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String?
  updatedBy   String?
  
  // Relations
  executions  Execution[]
  auditLogs   AuditLog[]
  
  // Indexes for performance
  @@index([status])
  @@index([isActive])
  @@index([createdAt])
  @@index([createdBy])
  @@map("workflows")
}

model Execution {
  id           String          @id @default(cuid())
  workflowId   String
  status       ExecutionStatus @default(PENDING)
  startedAt    DateTime?
  completedAt  DateTime?
  result       Json?           // Flexible JSON field for execution results
  error        Json?           // JSON field for error details
  context      Json?           // JSON field for execution context/variables
  triggeredBy  String?
  
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  
  // Relations
  workflow     Workflow        @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  auditLogs    AuditLog[]
  
  // Indexes for performance
  @@index([workflowId])
  @@index([status])
  @@index([startedAt])
  @@index([completedAt])
  @@index([createdAt])
  @@index([triggeredBy])
  @@map("executions")
}

model AuditLog {
  id           String     @id @default(cuid())
  entityType   EntityType // WORKFLOW or EXECUTION
  entityId     String     // workflowId or executionId
  action       AuditAction
  details      Json?      // Flexible JSON field for audit details
  userId       String?    // User who performed the action
  userAgent    String?
  ipAddress    String?
  
  createdAt    DateTime   @default(now())
  
  // Relations (optional foreign keys for referential integrity)
  workflow     Workflow?  @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  execution    Execution? @relation(fields: [executionId], references: [id], onDelete: Cascade)
  workflowId   String?
  executionId  String?
  
  // Indexes for performance and querying
  @@index([entityType, entityId])
  @@index([action])
  @@index([userId])
  @@index([createdAt])
  @@index([workflowId])
  @@index([executionId])
  @@map("audit_logs")
}

// Enums
enum WorkflowStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  DEPRECATED
}

enum ExecutionStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
  TIMEOUT
}

enum EntityType {
  WORKFLOW
  EXECUTION
}

enum AuditAction {
  CREATED
  UPDATED
  DELETED
  EXECUTED
  CANCELLED
  PUBLISHED
  ARCHIVED
  STATUS_CHANGED
  PERMISSION_CHANGED
}